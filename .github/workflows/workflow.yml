name: Deploy
on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS_ACCESS_KEY_ID of the caller workflow'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS_SECRET_ACCESS_KEY of the caller workflow'
        required: true
      AWS_S3_REGION:
        description: 'AWS_S3_REGION of the caller workflow'
        required: true
env:
  DOMAIN: 'menos.xyz'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}
      - name: Set s3 bucket name
        uses: sergeysova/jq-action@v2
        id: bucket_name
        with:
          cmd: "echo \"$(jq .name ./.menos/config.json -r).${{ env.DOMAIN }}\""
      - name: Check if the bucket exists
        run: |
          set +e
          aws s3api head-bucket --bucket ${{ steps.bucket_name.outputs.value }} > /dev/null 2>&1
          echo "bucket_exists=$(echo $?)" >> $GITHUB_ENV
      
      - name: Create bucket in S3
        if: ${{ env.bucket_exists != 0 }}
        uses: aitorres/aws-s3-create-bucket@v1.2.0
        with:
          bucket-name: ${{ steps.bucket_name.outputs.value }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}
          acl: 'public-read'
      - name: Convert bucket to static website
        if: ${{ env.bucket_exists != 0 }}
        run: |
          aws s3 website s3://${{ steps.bucket_name.outputs.value }}/ --index-document index.html
          echo '{"Version":"2012-10-17","Statement":[{"Sid":"PublicRead","Effect":"Allow","Principal":"*","Action":["s3:GetObject","s3:GetObjectVersion"],"Resource":"arn:aws:s3:::BUCKET_NAME/*"}]}' > policy.json
          sed -i "s/BUCKET_NAME/${{ steps.bucket_name.outputs.value }}/" policy.json
          aws s3api put-bucket-policy --bucket ${{ steps.bucket_name.outputs.value }} --policy file://policy.json
          aws cloudfront create-distribution --origin-domain-name ${{ steps.bucket_name.outputs.value }} --default-root-object index.html
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Build
        run: |
          yarn install && yarn build
      - name: Deploy
        uses: jonelantha/gatsby-s3-action@v1
        with:
          dest-s3-bucket: ${{ steps.bucket_name.outputs.value }}